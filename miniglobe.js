var lastMousePos={x:0,y:0};document.addEventListener("DOMContentLoaded",(function(){console.log("DOM loaded, starting initialization..."),document.addEventListener("mousemove",(function(e){lastMousePos.x="number"==typeof e.pageX?e.pageX:e.clientX,lastMousePos.y="number"==typeof e.pageY?e.pageY:e.clientY}),{passive:!0}),document.getElementById("globeViz").innerHTML='<div style="display: flex; justify-content: center; align-items: center; height: 100vh; font-family: Arial, sans-serif; color: #666;"><div><h2>Loading Globe...</h2><p>Please wait while the interactive globe loads.</p></div></div>';let e=0;!function t(){"undefined"!=typeof Globe?(console.log("Globe library loaded, proceeding..."),function(){function e(e){let t=[0,1];return{domain:function(e){return e?(t=e,this):t},__call__:function(o){const n=(o-t[0])/(t[1]-t[0]),l=Math.max(0,Math.min(1,n));return e(l)}}}function t(e){if(e<.5){const t=1,o=1-2*e,n=0;return`rgb(${Math.round(255*t)}, ${Math.round(255*o)}, ${Math.round(255*n)})`}{const t=1,o=1-2*(e-.5),n=0;return`rgb(${Math.round(255*t)}, ${Math.round(255*o)}, ${Math.round(255*n)})`}}const o=e(t),n=e=>e.properties.GDP_MD_EST/Math.max(1e5,e.properties.POP_EST);let l="North America",i=null,r=null,s=null,c=null,a=null,d=[],u=!0,p=null,g=null;const f={"North America":["USA","CAN","MEX","GTM","BLZ","SLV","HND","NIC","CRI","PAN","CUB","JAM","HTI","DOM","TTO","BHS","BRB","DMA","GRD","KNA","LCA","VCT","ATG"],"South America":["BRA","ARG","CHL","PER","COL","VEN","ECU","BOL","PRY","URY","GUY","SUR","GUF"],Europe:["DEU","GBR","FRA","ITA","ESP","UKR","POL","ROU","NLD","BEL","CZE","GRC","PRT","SWE","HUN","AUT","BLR","CHE","BGR","SRB","DNK","FIN","SVK","NOR","IRL","HRV","BIH","ALB","LTU","SLO","LVA","EST","MKD","MDA","LUX","MLT","ISL","MNE","CYP","LIE","AND","MCO","SMR","VAT"],Asia:["CHN","IND","IDN","PAK","BGD","JPN","PHL","VNM","THA","MMR","KOR","IRQ","AFG","UZB","MYS","YEM","NPL","PRK","TWN","SYR","KAZ","KHM","JOR","AZE","TJK","LAO","LBN","KGZ","TKM","SGP","GEO","ARM","MNG","OMN","LKA","BTN","MDV","BRN"],"Middle East":["TUR","IRN","SAU","IRQ","SYR","JOR","ISR","LBN","QAT","BHR","KWT","ARE","OMN","YEM"],Africa:["NGA","ETH","EGY","COD","TZA","ZAF","KEN","UGA","DZA","SDN","MAR","GHA","MOZ","AGO","MDG","CMR","NER","BFA","MLI","MWI","ZMB","SOM","SEN","TCD","ZWE","GIN","RWA","BEN","TUN","BWA","LBY","LBR","SLE","CAF","MRT","ERI","GAB","GMB","GIN","GNB","CIV","TGO","STP","COM","DJI","GNQ","SYC","MUS","CPV","SWZ","LSO"]},y={France:"Europe",Norway:"Europe","Northern Cyprus":"Asia",Kosovo:"Europe",Somaliland:"Africa"},h=["RUS"];function A(e,t=null){return!h.includes(e)&&(!t||!h.includes(t))}function m(e,t=null){for(const[t,o]of Object.entries(f))if(o.includes(e))return t;return t&&y[t]?y[t]:"Other"}function I(){c&&c.hexPolygonsData(a.features.filter((e=>"AQ"!==e.properties.ISO_A2)))}if(console.log("Loading countries data..."),console.log("Countries data available:","undefined"!=typeof countriesData),"undefined"==typeof countriesData)return console.error("Countries data not loaded!"),void(document.body.innerHTML='<div style="padding: 20px; color: red; font-family: Arial, sans-serif;"><h2>Error Loading Globe</h2><p>Countries data not found. Please ensure countries-data.js is loaded.</p></div>');a=countriesData,console.log("Countries loaded:",a.features.length,"countries");const E=Math.max(...a.features.map(n));o.domain([0,E]),d=[],console.log("Generating dots within countries only...");if(d=[],console.log("Generated country dots:",d.length),console.log("Creating Globe object..."),console.log("Globe library available:","undefined"!=typeof Globe),"undefined"==typeof Globe)return console.error("Globe library not loaded!"),void(document.body.innerHTML='<div style="padding: 20px; color: red; font-family: Arial, sans-serif;"><h2>Error Loading Globe</h2><p>Globe.gl library not found. Please check your internet connection.</p></div>');c=new Globe(document.getElementById("globeViz")).backgroundColor("rgba(0,0,0,0)").showGlobe(!0).globeImageUrl("data:image/svg+xml;base64,"+btoa('<svg xmlns="http://www.w3.org/2000/svg" width="1" height="1"><rect width="1" height="1" fill="#E8EEFf"/></svg>')).showAtmosphere(!1).hexPolygonsData(a.features.filter((e=>"AQ"!==e.properties.ISO_A2))).hexPolygonResolution(3).hexPolygonMargin(.2).hexPolygonAltitude(.006).hexPolygonUseDots(!0).hexPolygonCurvatureResolution(0).enablePointerInteraction(!0).onZoom((()=>!1)).polygonsData(a.features.filter((e=>"AQ"!==e.properties.ISO_A2))).polygonAltitude(.012).polygonCapColor((()=>"rgba(0, 0, 0, 0)")).polygonSideColor((()=>"rgba(0, 0, 0, 0)")).polygonStrokeColor((()=>"rgba(0, 0, 0, 0)")).hexPolygonColor((({properties:e})=>{const t=m(e.ISO_A3,e.ADMIN),o=e.ADMIN,n={base:"#B4BBF0",hoverContinent:"#3E4FE0",hoverCountry:"#3E4FE0",selectedCountry:"#3E4FE0",selectedContinent:"#3E4FE0",nonSelectable:"#B4BBF0"};return A(e.ISO_A3,e.ADMIN)?i&&i.properties&&i.properties.ADMIN===o?n.selectedCountry:l&&t===l?n.selectedContinent:r&&r.properties&&r.properties.ADMIN===o?n.hoverCountry:s&&t===s?n.hoverContinent:n.base:n.nonSelectable})).onHexPolygonHover((e=>{if(g&&(clearTimeout(g),g=null),e){const t=m(e.properties.ISO_A3,e.properties.ADMIN);s!==t&&(s=t,r=e,N(),I())}else g=setTimeout((()=>{s=null,r=null,I(),S(1e3),g=null}),100)})).hexPolygonLabel((({properties:e})=>{const t=m(e.ISO_A3,e.ADMIN),o=A(e.ISO_A3,e.ADMIN),n=o?"":'<div style="color:#ff6b6b; font-size: 10px; margin-top: 2px;">â€¢ Not selectable</div>';return`<div style="font-family: Inter, Arial, sans-serif; font-size: 12px; line-height: 1.4;">\n        <div style="font-weight:600; color:${o?"#2D3FCC":"#888888"};">${e.ADMIN}</div>\n        <div style="color:#667085;">Continent: ${t}</div>\n        ${n}\n      </div>`})).onHexPolygonClick((e=>{if(e){if(!A(e.properties.ISO_A3,e.properties.ADMIN))return void console.log(`Country ${e.properties.ADMIN} (${e.properties.ISO_A3}) is not selectable`);N(),r=null,s=null,i=e,l=m(e.properties.ISO_A3,e.properties.ADMIN),console.log(`Selected country: ${e.properties.ADMIN} in continent: ${l}`),c.hexPolygonsData(a.features.filter((e=>"AQ"!==e.properties.ISO_A2))),C();try{const e=document.getElementById("continent-tooltips");if(e){e.querySelectorAll(".continent-tooltip").forEach((e=>{e.style.display="none"}));const t=l.replace(/\s+/g,"-"),o=document.getElementById(t);o&&(o.style.display="block")}}catch(e){}console.log("Focusing on country:",e.properties.ADMIN),B(e),S(1e3)}})).onPolygonHover((e=>{e?(N(),r=e,s=m(e.properties.ISO_A3,e.properties.ADMIN),I()):(r=null,s=null,I(),S(1e3))})).onPolygonClick((e=>{if(e){if(!A(e.properties.ISO_A3,e.properties.ADMIN))return void console.log(`Country ${e.properties.ADMIN} (${e.properties.ISO_A3}) is not selectable`);N(),r=null,s=null,i=e,l=m(e.properties.ISO_A3,e.properties.ADMIN),console.log(`Selected country: ${e.properties.ADMIN} in continent: ${l}`),I(),C();try{const e=document.getElementById("continent-tooltips");if(e){e.querySelectorAll(".continent-tooltip").forEach((e=>{e.style.display="none"}));const t=l.replace(/\s+/g,"-"),o=document.getElementById(t);o&&(o.style.display="block")}}catch(e){}console.log("Focusing on country:",e.properties.ADMIN),B(e),S(1e3)}})),console.log("Adding bright lighting and material effects...");try{if(c.scene()&&window.THREE){console.log("Scene background set to white");c.globeMaterial()?console.log("Globe material set to white"):console.log("Could not access globe material"),console.log("Bright lighting and material effects added successfully")}else console.log("Three.js not available or scene not accessible");const _=c.controls();_&&(_.enableDamping=!0,_.dampingFactor=.06,_.autoRotate=!1,_.autoRotateSpeed=1,_.rotateSpeed=.5,_.enableZoom=!1,_.update())}catch($){console.log("Could not add lighting effects:",$)}console.log("Initializing globe with North America selected..."),console.log("Setting initial camera position to North America..."),c.pointOfView({lat:45,lng:-100,altitude:1.5},0),console.log("Initializing UI..."),D();try{const H=document.getElementById("continent-tooltips");if(H){H.querySelectorAll(".continent-tooltip").forEach((e=>{e.style.display="none"}));const U=document.getElementById("North-America");U&&(U.style.display="block")}}catch(V){}!function(){try{const e=document.getElementById("countryPanel");e&&(e.style.display="none");const t=document.getElementById("countryList");t&&(t.style.display="none")}catch(e){}}();const M=c.pointOfView.bind(c);function b(){const e=c.controls&&c.controls();e&&(e.autoRotate=!0)}function N(){const e=c.controls&&c.controls();e&&(e.autoRotate=!1),p&&(clearTimeout(p),p=null)}function S(e=1e3){p&&clearTimeout(p),p=setTimeout((()=>{u&&b(),p=null}),e)}function C(){document.querySelectorAll(".global_region-item").forEach((e=>{e.classList.toggle("w--current",e.textContent===l)})),R(),document.querySelectorAll(".country-item").forEach((e=>{e.classList.toggle("w--current",i&&e.textContent===i.properties.ADMIN)}))}function D(){const e=document.getElementById("continentList");["North America","South America","Europe","Asia","Middle East","Africa"].forEach((t=>{const o=document.createElement("div");o.className="global_region-item sections_menu-item",o.textContent=t,t===l&&o.classList.add("w--current"),o.addEventListener("click",(()=>v(t))),e.appendChild(o)})),R()}function v(e){console.log(`Selecting continent: ${e}`),l=e,i=null,N(),document.querySelectorAll(".global_region-item").forEach((t=>{t.classList.toggle("w--current",t.textContent===e)}));try{const t=document.getElementById("continent-tooltips");if(t){t.querySelectorAll(".continent-tooltip").forEach((e=>{e.style.display="none"}));const o=e.replace(/\s+/g,"-"),n=document.getElementById(o);n&&(n.style.display="block")}}catch(e){}I(),R(),w(e),S(1e3)}function O(e){if(A(e.properties.ISO_A3,e.properties.ADMIN)){i=e,l=m(e.properties.ISO_A3,e.properties.ADMIN),N(),document.querySelectorAll(".global_region-item").forEach((e=>{e.classList.toggle("w--current",e.textContent===l)}));try{const e=document.getElementById("continent-tooltips");if(e){e.querySelectorAll(".continent-tooltip").forEach((e=>{e.style.display="none"}));const t=l.replace(/\s+/g,"-"),o=document.getElementById(t);o&&(o.style.display="block")}}catch(e){}document.querySelectorAll(".country-item").forEach((t=>{t.classList.toggle("w--current",t.textContent===e.properties.ADMIN)})),I(),B(e),S(1e3)}else console.log(`Country ${e.properties.ADMIN} (${e.properties.ISO_A3}) is not selectable`)}function R(){const e=document.getElementById("countryList");document.getElementById("continentTitle").textContent=l,e.innerHTML="";const t=a.features.filter((e=>{const t=m(e.properties.ISO_A3,e.properties.ADMIN)===l,o=A(e.properties.ISO_A3,e.properties.ADMIN);return t&&o}));console.log(`Found ${t.length} selectable countries for continent: ${l}`),console.log("Countries:",t.map((e=>`${e.properties.ADMIN} (${e.properties.ISO_A3})`))),t.forEach((t=>{const o=document.createElement("div");o.className="country-item",o.textContent=t.properties.ADMIN,i&&i.properties.ISO_A3===t.properties.ISO_A3&&o.classList.add("w--current"),o.addEventListener("click",(()=>O(t))),e.appendChild(o)}))}function w(e){console.log("animateToContinent called with:",e);const t={"North America":{lat:45,lng:-100},"South America":{lat:-15,lng:-60},Europe:{lat:50,lng:10},Asia:{lat:35,lng:100},"Middle East":{lat:30,lng:50},Africa:{lat:0,lng:20}}[e];if(t){const o=c.pointOfView();console.log(`Animating to ${e}:`,t,"Current POV:",o),c.pointOfView({lat:t.lat,lng:t.lng,altitude:o.altitude},1e3)}else console.log("No center found for continent:",e)}function B(e){console.log("animateToCountry called with:",e.properties.ADMIN);const t=e.geometry.coordinates;let o=0,n=0,l=0;if("Polygon"===e.geometry.type?t[0].forEach((e=>{n+=e[0],o+=e[1],l++})):"MultiPolygon"===e.geometry.type&&t.forEach((e=>{e[0].forEach((e=>{n+=e[0],o+=e[1],l++}))})),l>0){const t=o/l,i=n/l,r=c.pointOfView();console.log(`Animating to ${e.properties.ADMIN}:`,{lat:t,lng:i},"Current POV:",r),c.pointOfView({lat:t,lng:i,altitude:r.altitude},1e3)}else console.log("No coordinates found for country:",e.properties.ADMIN)}function L(e){if(c){const t=c.renderer();t&&(t.setSize(e.width,e.height),t.setPixelRatio(window.devicePixelRatio));const o=c.camera();o&&(o.aspect=e.width/e.height,o.updateProjectionMatrix());const n=c.controls();if(n&&(n.update(),n.domElement)){const e=new Event("resize");n.domElement.dispatchEvent(e)}"function"==typeof c.refresh&&c.refresh(),"function"==typeof c.width&&"function"==typeof c.height&&c.width(e.width).height(e.height);const l=t.domElement;if(l){l.width=e.width*window.devicePixelRatio,l.height=e.height*window.devicePixelRatio,l.style.width=e.width+"px",l.style.height=e.height+"px";const t=l.getBoundingClientRect(),o=new MouseEvent("mousemove",{clientX:t.left+t.width/2,clientY:t.top+t.height/2,bubbles:!0});l.dispatchEvent(o)}lastMousePos={x:0,y:0},console.log(`Globe container resized to: ${e.width}x${e.height}`)}}c.pointOfView=function(e,t){return M(e,t)},console.log("Starting auto-rotation..."),b();const P=document.getElementById("globeViz");if(P){let F;function G(e){clearTimeout(F),F=setTimeout((()=>{const t=e[0];if(t){L(t.contentRect)}}),50)}if("undefined"!=typeof ResizeObserver){new ResizeObserver(G).observe(P),console.log("ResizeObserver set up to monitor globe container size changes")}else{function T(){L(P.getBoundingClientRect())}let z;function x(){clearTimeout(z),z=setTimeout(T,100)}window.addEventListener("resize",x),console.log("Fallback window resize handler added (ResizeObserver not supported)")}}}()):e<100?(console.log("Waiting for Globe library...",e),e++,setTimeout(t,100)):(console.error("Globe library failed to load after 10 seconds"),document.getElementById("globeViz").innerHTML='<div style="display: flex; justify-content: center; align-items: center; height: 100vh; font-family: Arial, sans-serif; color: red;"><div><h2>Error Loading Globe</h2><p>Globe.gl library failed to load. Please check your internet connection and try again.</p></div></div>')}()}));
