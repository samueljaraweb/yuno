 var lastMousePos={x:0,y:0};document.addEventListener('DOMContentLoaded',function(){console.log('DOM loaded,starting initialization...');document.addEventListener('mousemove',function(e){lastMousePos.x=(typeof e.pageX==='number' ? e.pageX:e.clientX);lastMousePos.y=(typeof e.pageY==='number' ? e.pageY:e.clientY);},{passive:true});document.getElementById('globeViz').innerHTML='<div style="display:flex;justify-content:center;align-items:center;height:100vh;font-family:Arial,sans-serif;color:#666;"><div><h2>Loading Globe...</h2><p>Please wait while the interactive globe loads.</p></div></div>';let waitCount=0;const maxWait=100;function waitForGlobe(){if(typeof Globe !=='undefined'){console.log('Globe library loaded,proceeding...');initializeGlobe();}else if(waitCount<maxWait){console.log('Waiting for Globe library...',waitCount);waitCount++;setTimeout(waitForGlobe,100);}else{console.error('Globe library failed to load after 10 seconds');document.getElementById('globeViz').innerHTML='<div style="display:flex;justify-content:center;align-items:center;height:100vh;font-family:Arial,sans-serif;color:red;"><div><h2>Error Loading Globe</h2><p>Globe.gl library failed to load. Please check your internet connection and try again.</p></div></div>';}}waitForGlobe();function initializeGlobe(){function createColorScale(interpolator){let domain=[0,1];return{domain:function(newDomain){if(newDomain){domain=newDomain;return this;}return domain;},__call__:function(value){const normalized=(value-domain[0])/(domain[1]-domain[0]);const clamped=Math.max(0,Math.min(1,normalized));return interpolator(clamped);}};}function interpolateYlOrRd(t){if(t<0.5){const r=1;const g=1-t*2;const b=0;return `rgb(${Math.round(r*255)},${Math.round(g*255)},${Math.round(b*255)})`;}else{const r=1;const g=1-(t-0.5)*2;const b=0;return `rgb(${Math.round(r*255)},${Math.round(g*255)},${Math.round(b*255)})`;}}const colorScale=createColorScale(interpolateYlOrRd);const getVal=feat=>feat.properties.GDP_MD_EST/Math.max(1e5,feat.properties.POP_EST);let selectedContinent='North America';let selectedCountry=null;let hoveredCountry=null;let hoveredContinent=null;let world=null;let countries=null;let dotsData=[];let autoRotate=true;let autoRotateInterval=null;let resumeRotationTimeout=null;let hoverTimeout=null;const continentMapping={'North America':['USA','CAN','MEX','GTM','BLZ','SLV','HND','NIC','CRI','PAN','CUB','JAM','HTI','DOM','TTO','BHS','BRB','DMA','GRD','KNA','LCA','VCT','ATG'],'South America':['BRA','ARG','CHL','PER','COL','VEN','ECU','BOL','PRY','URY','GUY','SUR','GUF'],'Europe':['DEU','GBR','FRA','ITA','ESP','UKR','POL','ROU','NLD','BEL','CZE','GRC','PRT','SWE','HUN','AUT','BLR','CHE','BGR','SRB','DNK','FIN','SVK','NOR','IRL','HRV','BIH','ALB','LTU','SLO','LVA','EST','MKD','MDA','LUX','MLT','ISL','MNE','CYP','LIE','AND','MCO','SMR','VAT'],'Asia':['CHN','IND','IDN','PAK','BGD','JPN','PHL','VNM','THA','MMR','KOR','IRQ','AFG','UZB','MYS','YEM','NPL','PRK','TWN','SYR','KAZ','KHM','JOR','AZE','TJK','LAO','LBN','KGZ','TKM','SGP','GEO','ARM','MNG','OMN','LKA','BTN','MDV','BRN'],'Middle East':['TUR','IRN','SAU','IRQ','SYR','JOR','ISR','LBN','QAT','BHR','KWT','ARE','OMN','YEM'],'Africa':['NGA','ETH','EGY','COD','TZA','ZAF','KEN','UGA','DZA','SDN','MAR','GHA','MOZ','AGO','MDG','CMR','NER','BFA','MLI','MWI','ZMB','SOM','SEN','TCD','ZWE','GIN','RWA','BEN','TUN','BWA','LBY','LBR','SLE','CAF','MRT','ERI','GAB','GMB','GIN','GNB','CIV','TGO','STP','COM','DJI','GNQ','SYC','MUS','CPV','SWZ','LSO']};const specialCountryMapping={'France':'Europe','Norway':'Europe','Northern Cyprus':'Asia','Kosovo':'Europe','Somaliland':'Africa'};const nonSelectableCountries=[ 'RUS',];function isCountrySelectable(countryCode,countryName=null){if(nonSelectableCountries.includes(countryCode)){return false;}if(countryName && nonSelectableCountries.includes(countryName)){return false;}return true;}function getContinentForCountry(countryCode,countryName=null){for(const [continent,codes] of Object.entries(continentMapping)){if(codes.includes(countryCode)){return continent;}}if(countryName && specialCountryMapping[countryName]){return specialCountryMapping[countryName];}return 'Other';}function updateHexPolygonColors(){if(world){world.hexPolygonsData(countries.features.filter(d=>d.properties.ISO_A2 !=='AQ'));}}function updateDotsColor(worldInstance){}function updatePolygonColors(worldInstance){}console.log('Loading countries data...');console.log('Countries data available:',typeof countriesData !=='undefined');if(typeof countriesData==='undefined'){console.error('Countries data not loaded!');document.body.innerHTML='<div style="padding:20px;color:red;font-family:Arial,sans-serif;"><h2>Error Loading Globe</h2><p>Countries data not found. Please ensure countries-data.js is loaded.</p></div>';return;}countries=countriesData;console.log('Countries loaded:',countries.features.length,'countries');const maxVal=Math.max(...countries.features.map(getVal));colorScale.domain([0,maxVal]);dotsData=[];console.log('Generating dots within countries only...');const latStep=1.8;const baseLngStep=1.8;function isPointInPolygon(point,polygon){const x=point[0],y=point[1];let inside=false;for(let i=0,j=polygon.length-1;i<polygon.length;j=i++){const xi=polygon[i][0],yi=polygon[i][1];const xj=polygon[j][0],yj=polygon[j][1];if(((yi>y)!==(yj>y))&&(x<(xj-xi)*(y-yi)/(yj-yi)+xi)){inside=!inside;}}return inside;}function isPointInAnyCountry(lat,lng){const point=[lng,lat];for(const country of countries.features){if(country.properties.ISO_A2==='AQ')continue;const coordinates=country.geometry.coordinates;if(country.geometry.type==='Polygon'){if(isPointInPolygon(point,coordinates[0])){return true;}}else if(country.geometry.type==='MultiPolygon'){for(const polygon of coordinates){if(isPointInPolygon(point,polygon[0])){return true;}}}}return false;}dotsData=[];function findCountryForPoint(lat,lng){const point=[lng,lat];for(const country of countries.features){if(country.properties.ISO_A2==='AQ')continue;const coordinates=country.geometry.coordinates;if(country.geometry.type==='Polygon'){if(isPointInPolygon(point,coordinates[0])){return country;}}else if(country.geometry.type==='MultiPolygon'){for(const polygon of coordinates){if(isPointInPolygon(point,polygon[0])){return country;}}}}return null;}console.log('Generated country dots:',dotsData.length);console.log('Creating Globe object...');console.log('Globe library available:',typeof Globe !=='undefined');if(typeof Globe==='undefined'){console.error('Globe library not loaded!');document.body.innerHTML='<div style="padding:20px;color:red;font-family:Arial,sans-serif;"><h2>Error Loading Globe</h2><p>Globe.gl library not found. Please check your internet connection.</p></div>';return;}world=new Globe(document.getElementById('globeViz')).backgroundColor('rgba(0,0,0,0)').showGlobe(true).globeImageUrl('data:image/svg+xml;base64,'+btoa('<svg xmlns="http:.showAtmosphere(false).hexPolygonsData(countries.features.filter(d=>d.properties.ISO_A2 !=='AQ')).hexPolygonResolution(3).hexPolygonMargin(0.2).hexPolygonAltitude(0.006).hexPolygonUseDots(true).hexPolygonCurvatureResolution(0).enablePointerInteraction(true).onZoom(()=>false).polygonsData(countries.features.filter(d=>d.properties.ISO_A2 !=='AQ')).polygonAltitude(0.012).polygonCapColor(()=>'rgba(0,0,0,0)').polygonSideColor(()=>'rgba(0,0,0,0)').polygonStrokeColor(()=>'rgba(0,0,0,0)').hexPolygonColor(({properties:d})=>{const continent=getContinentForCountry(d.ISO_A3,d.ADMIN);const countryName=d.ADMIN;const colors={base:'#B4BBF0',hoverContinent:'#3E4FE0',hoverCountry:'#3E4FE0',selectedCountry:'#3E4FE0',selectedContinent:'#3E4FE0',nonSelectable:'#B4BBF0'};if(!isCountrySelectable(d.ISO_A3,d.ADMIN)){return colors.nonSelectable;}if(selectedCountry && selectedCountry.properties && selectedCountry.properties.ADMIN===countryName){return colors.selectedCountry;}if(selectedContinent && continent===selectedContinent){return colors.selectedContinent;}if(hoveredCountry && hoveredCountry.properties && hoveredCountry.properties.ADMIN===countryName){return colors.hoverCountry;}if(hoveredContinent && continent===hoveredContinent){return colors.hoverContinent;}return colors.base;}).onHexPolygonHover((polygon)=>{if(hoverTimeout){clearTimeout(hoverTimeout);hoverTimeout=null;}if(polygon){const newContinent=getContinentForCountry(polygon.properties.ISO_A3,polygon.properties.ADMIN);if(hoveredContinent !==newContinent){hoveredContinent=newContinent;hoveredCountry=polygon;stopAutoRotation();updateHexPolygonColors();}}else{hoverTimeout=setTimeout(()=>{hoveredContinent=null;hoveredCountry=null;updateHexPolygonColors();resumeAutoRotationAfterDelay(1000);hoverTimeout=null;},100);}}).hexPolygonLabel(({properties:d})=>{const continent=getContinentForCountry(d.ISO_A3,d.ADMIN);const isSelectable=isCountrySelectable(d.ISO_A3,d.ADMIN);const statusText=isSelectable ? '':'<div style="color:#ff6b6b;font-size:10px;margin-top:2px;">â€¢ Not selectable</div>';return `<div style="font-family:Inter,Arial,sans-serif;font-size:12px;line-height:1.4;"><div style="font-weight:600;color:${isSelectable ? '#2D3FCC':'#888888'};">${d.ADMIN}</div><div style="color:#667085;">Continent:${continent}</div>${statusText}</div>`;}).onHexPolygonClick((polygon)=>{if(polygon){if(!isCountrySelectable(polygon.properties.ISO_A3,polygon.properties.ADMIN)){console.log(`Country ${polygon.properties.ADMIN}(${polygon.properties.ISO_A3})is not selectable`);return;}stopAutoRotation();hoveredCountry=null;hoveredContinent=null;selectedCountry=polygon;selectedContinent=getContinentForCountry(polygon.properties.ISO_A3,polygon.properties.ADMIN);console.log(`Selected country:${polygon.properties.ADMIN}in continent:${selectedContinent}`);world.hexPolygonsData(countries.features.filter(d=>d.properties.ISO_A2 !=='AQ'));updateUIFromGlobeSelection();try{const container=document.getElementById('continent-tooltips');if(container){container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';});const id=selectedContinent.replace(/\s+/g,'-');const el=document.getElementById(id);if(el)el.style.display='block';}}catch(_){}console.log('Focusing on country:',polygon.properties.ADMIN);animateToCountry(polygon);resumeAutoRotationAfterDelay(1000);}}).onPolygonHover(hoverD=>{if(hoverD){stopAutoRotation();hoveredCountry=hoverD;hoveredContinent=getContinentForCountry(hoverD.properties.ISO_A3,hoverD.properties.ADMIN);updateHexPolygonColors();}else{hoveredCountry=null;hoveredContinent=null;updateHexPolygonColors();resumeAutoRotationAfterDelay(1000);}}).onPolygonClick(clickedD=>{if(clickedD){if(!isCountrySelectable(clickedD.properties.ISO_A3,clickedD.properties.ADMIN)){console.log(`Country ${clickedD.properties.ADMIN}(${clickedD.properties.ISO_A3})is not selectable`);return;}stopAutoRotation();hoveredCountry=null;hoveredContinent=null;selectedCountry=clickedD;selectedContinent=getContinentForCountry(clickedD.properties.ISO_A3,clickedD.properties.ADMIN);console.log(`Selected country:${clickedD.properties.ADMIN}in continent:${selectedContinent}`);updateHexPolygonColors();updateUIFromGlobeSelection();try{const container=document.getElementById('continent-tooltips');if(container){container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';});const id=selectedContinent.replace(/\s+/g,'-');const el=document.getElementById(id);if(el)el.style.display='block';}}catch(_){}console.log('Focusing on country:',clickedD.properties.ADMIN);animateToCountry(clickedD);resumeAutoRotationAfterDelay(1000);}});console.log('Adding bright lighting and material effects...');try{const scene=world.scene();if(scene && window.THREE){console.log('Scene background set to white');const globeMaterial=world.globeMaterial();if(globeMaterial){console.log('Globe material set to white');}else{console.log('Could not access globe material');}console.log('Bright lighting and material effects added successfully');}else{console.log('Three.js not available or scene not accessible');}const controls=world.controls();if(controls){controls.enableDamping=true;controls.dampingFactor=0.06;controls.autoRotate=false;controls.autoRotateSpeed=1;controls.rotateSpeed=0.5;controls.enableZoom=false;controls.update();}}catch(error){console.log('Could not add lighting effects:',error);}console.log('Initializing globe with North America selected...');console.log('Setting initial camera position to North America...');world.pointOfView({lat:45,lng:-100,altitude:1.5},0);console.log('Initializing UI...');initializeUI();try{const container=document.getElementById('continent-tooltips');if(container){container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';});const el=document.getElementById('North-America');if(el)el.style.display='block';}}catch(_){}(function hideCountryItems(){try{const panel=document.getElementById('countryPanel');if(panel)panel.style.display='none';const list=document.getElementById('countryList');if(list)list.style.display='none';}catch(_){}})();const originalPointOfView=world.pointOfView.bind(world);world.pointOfView=function(pov,ms){return originalPointOfView(pov,ms);};console.log('Starting auto-rotation...');startAutoRotation();function startAutoRotation(){const controls=world.controls && world.controls();if(controls){controls.autoRotate=true;}}function stopAutoRotation(){const controls=world.controls && world.controls();if(controls){controls.autoRotate=false;}if(resumeRotationTimeout){clearTimeout(resumeRotationTimeout);resumeRotationTimeout=null;}}function resumeAutoRotationAfterDelay(delay=1000){if(resumeRotationTimeout){clearTimeout(resumeRotationTimeout);}resumeRotationTimeout=setTimeout(()=>{if(autoRotate){startAutoRotation();}resumeRotationTimeout=null;},delay);}function updateUIFromGlobeSelection(){document.querySelectorAll('.global_region-item').forEach(item=>{item.classList.toggle('w--current',item.textContent===selectedContinent);});updateCountryList();document.querySelectorAll('.country-item').forEach(item=>{item.classList.toggle('w--current',selectedCountry && item.textContent===selectedCountry.properties.ADMIN);});}function initializeUI(){const continentList=document.getElementById('continentList');const continents=['North America','South America','Europe','Asia','Middle East','Africa'];continents.forEach(continent=>{const item=document.createElement('div');item.className='global_region-item sections_menu-item';item.textContent=continent;if(continent===selectedContinent){item.classList.add('w--current');}item.addEventListener('click',()=>selectContinent(continent));continentList.appendChild(item);});updateCountryList();}function selectContinent(continent){console.log(`Selecting continent:${continent}`);selectedContinent=continent;selectedCountry=null;stopAutoRotation();document.querySelectorAll('.global_region-item').forEach(item=>{item.classList.toggle('w--current',item.textContent===continent);});try{const container=document.getElementById('continent-tooltips');if(container){container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';});const id=continent.replace(/\s+/g,'-');const el=document.getElementById(id);if(el)el.style.display='block';}}catch(_){}updateHexPolygonColors();updateCountryList();animateToContinent(continent);resumeAutoRotationAfterDelay(1000);}function selectCountry(country){if(!isCountrySelectable(country.properties.ISO_A3,country.properties.ADMIN)){console.log(`Country ${country.properties.ADMIN}(${country.properties.ISO_A3})is not selectable`);return;}selectedCountry=country;selectedContinent=getContinentForCountry(country.properties.ISO_A3,country.properties.ADMIN);stopAutoRotation();document.querySelectorAll('.global_region-item').forEach(item=>{item.classList.toggle('w--current',item.textContent===selectedContinent);});try{const container=document.getElementById('continent-tooltips');if(container){container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';});const id=selectedContinent.replace(/\s+/g,'-');const el=document.getElementById(id);if(el)el.style.display='block';}}catch(_){}document.querySelectorAll('.country-item').forEach(item=>{item.classList.toggle('w--current',item.textContent===country.properties.ADMIN);});updateHexPolygonColors();animateToCountry(country);resumeAutoRotationAfterDelay(1000);}function showContinentTooltip(continent){try{const container=document.getElementById('continent-tooltips');if(!container)return;container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';el.style.position='absolute';el.style.left='';el.style.top='';el.style.transform='';});const normalized=String(continent || '').trim();const tip=container.querySelector('.continent-tooltip[data-continent="'+normalized+'"]');if(tip){const p=getContinentScreenPosition(normalized);if(p){tip.style.left=p.x+'px';tip.style.top=p.y+'px';tip.style.transform='translate(-50%,-120%)';}tip.style.display='block';}setTimeout(()=>{if(tip)tip.style.display='none';},2000);}catch(e){console.log('Tooltip error:',e);}}function showContinentTooltipAtPointer(continent){try{const container=document.getElementById('continent-tooltips');if(!container)return;container.querySelectorAll('.continent-tooltip').forEach(el=>{el.style.display='none';el.style.position='absolute';});const normalized=String(continent || '').trim();const tip=container.querySelector('.continent-tooltip[data-continent="'+normalized+'"]');if(tip){const hasMouse=lastMousePos &&(lastMousePos.x !==0 || lastMousePos.y !==0);const offsetY=18;if(hasMouse){tip.style.left=lastMousePos.x+'px';tip.style.top=(lastMousePos.y+offsetY)+'px';tip.style.transform='translate(-50%,0)';}else{const p=getContinentScreenPosition(normalized);if(p){tip.style.left=p.x+'px';tip.style.top=(p.y+offsetY)+'px';tip.style.transform='translate(-50%,0)';}}tip.style.display='block';}}catch(_){}}function getContinentScreenPosition(continent){try{const centers={'North America':{lat:45,lng:-100},'South America':{lat:-15,lng:-60},'Europe':{lat:50,lng:10},'Asia':{lat:35,lng:100},'Africa':{lat:0,lng:20},'Middle East':{lat:30,lng:50}};const c=centers[continent];if(!c || !world || !window.THREE)return null;const scene=world.scene && world.scene();const camera=world.camera && world.camera();const renderer=world.renderer && world.renderer();if(!scene || !camera || !renderer)return null;const phi=(90-c.lat)*(Math.PI/180);const theta=(c.lng+180)*(Math.PI/180);const radius=(world.getGlobeRadius && world.getGlobeRadius())|| 100;const pos=new window.THREE.Vector3(-radius*Math.sin(phi)*Math.cos(theta),radius*Math.cos(phi),radius*Math.sin(phi)*Math.sin(theta));const projected=pos.clone().project(camera);const canvas=renderer.domElement;const x=(projected.x*0.5+0.5)*canvas.clientWidth;const y=(-projected.y*0.5+0.5)*canvas.clientHeight;return{x,y};}catch(_){return null;}}function updateCountryList(){const countryList=document.getElementById('countryList');const continentTitle=document.getElementById('continentTitle');continentTitle.textContent=selectedContinent;countryList.innerHTML='';const continentCountries=countries.features.filter(country=>{const continent=getContinentForCountry(country.properties.ISO_A3,country.properties.ADMIN);const isInContinent=continent===selectedContinent;const isSelectable=isCountrySelectable(country.properties.ISO_A3,country.properties.ADMIN);return isInContinent && isSelectable;});console.log(`Found ${continentCountries.length}selectable countries for continent:${selectedContinent}`);console.log('Countries:',continentCountries.map(c=>`${c.properties.ADMIN}(${c.properties.ISO_A3})`));continentCountries.forEach(country=>{const item=document.createElement('div');item.className='country-item';item.textContent=country.properties.ADMIN;if(selectedCountry && selectedCountry.properties.ISO_A3===country.properties.ISO_A3){item.classList.add('w--current');}item.addEventListener('click',()=>selectCountry(country));countryList.appendChild(item);});}function animateToContinent(continent){console.log('animateToContinent called with:',continent);const continentCenters={'North America':{lat:45,lng:-100},'South America':{lat:-15,lng:-60},'Europe':{lat:50,lng:10},'Asia':{lat:35,lng:100},'Middle East':{lat:30,lng:50},'Africa':{lat:0,lng:20}};const center=continentCenters[continent];if(center){const currentPOV=world.pointOfView();console.log(`Animating to ${continent}:`,center,'Current POV:',currentPOV);world.pointOfView({lat:center.lat,lng:center.lng,altitude:currentPOV.altitude},1000);}else{console.log('No center found for continent:',continent);}}function animateToCountry(country){console.log('animateToCountry called with:',country.properties.ADMIN);const coords=country.geometry.coordinates;let totalLat=0,totalLng=0,pointCount=0;if(country.geometry.type==='Polygon'){coords[0].forEach(coord=>{totalLng+=coord[0];totalLat+=coord[1];pointCount++;});}else if(country.geometry.type==='MultiPolygon'){coords.forEach(polygon=>{polygon[0].forEach(coord=>{totalLng+=coord[0];totalLat+=coord[1];pointCount++;});});}if(pointCount>0){const centerLat=totalLat/pointCount;const centerLng=totalLng/pointCount;const currentPOV=world.pointOfView();console.log(`Animating to ${country.properties.ADMIN}:`,{lat:centerLat,lng:centerLng},'Current POV:',currentPOV);world.pointOfView({lat:centerLat,lng:centerLng,altitude:currentPOV.altitude},1000);}else{console.log('No coordinates found for country:',country.properties.ADMIN);}}function handleContainerResize(rect){if(world){const renderer=world.renderer();if(renderer){renderer.setSize(rect.width,rect.height);renderer.setPixelRatio(window.devicePixelRatio);}const camera=world.camera();if(camera){camera.aspect=rect.width/rect.height;camera.updateProjectionMatrix();}const controls=world.controls();if(controls){controls.update();if(controls.domElement){const resizeEvent=new Event('resize');controls.domElement.dispatchEvent(resizeEvent);}}if(typeof world.refresh==='function'){world.refresh();}if(typeof world.width==='function' && typeof world.height==='function'){world.width(rect.width).height(rect.height);}const canvas=renderer.domElement;if(canvas){canvas.width=rect.width*window.devicePixelRatio;canvas.height=rect.height*window.devicePixelRatio;canvas.style.width=rect.width+'px';canvas.style.height=rect.height+'px';const rect2=canvas.getBoundingClientRect();const syntheticEvent=new MouseEvent('mousemove',{clientX:rect2.left+rect2.width/2,clientY:rect2.top+rect2.height/2,bubbles:true});canvas.dispatchEvent(syntheticEvent);}lastMousePos={x:0,y:0};console.log(`Globe container resized to:${rect.width}x${rect.height}`);}}const container=document.getElementById('globeViz');if(container){let resizeTimeout;function debouncedContainerResize(entries){clearTimeout(resizeTimeout);resizeTimeout=setTimeout(()=>{const entry=entries[0];if(entry){const rect=entry.contentRect;handleContainerResize(rect);}},50);}if(typeof ResizeObserver !=='undefined'){const resizeObserver=new ResizeObserver(debouncedContainerResize);resizeObserver.observe(container);console.log('ResizeObserver set up to monitor globe container size changes');}else{function fallbackWindowResize(){const rect=container.getBoundingClientRect();handleContainerResize(rect);}let fallbackTimeout;function debouncedFallbackResize(){clearTimeout(fallbackTimeout);fallbackTimeout=setTimeout(fallbackWindowResize,100);}window.addEventListener('resize',debouncedFallbackResize);console.log('Fallback window resize handler added(ResizeObserver not supported)');}}}});